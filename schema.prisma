// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id         String       @id @default(cuid())
  name       String       @default("")
  email      String       @unique @default("")
  password   String
  experience Experience[] @relation("Experience_user")
  projects   Project[]    @relation("Project_user")
  articles   Article[]    @relation("Article_user")
}

model Experience {
  id          String  @id @default(cuid())
  companyName String  @default("")
  position    String  @default("")
  description String  @default("")
  user        User?   @relation("Experience_user", fields: [userId], references: [id])
  userId      String? @map("user")

  @@index([userId])
}

model Project {
  id               String             @id @default(cuid())
  name             String             @default("")
  organization     String             @default("")
  shortDescription String             @default("")
  challenges       ProjectChallenge[] @relation("ProjectChallenge_project")
  technologies     String             @default("")
  features         String             @default("")
  sourceCodeUrl    String             @default("")
  liveSiteUrl      String             @default("")
  objective        String             @default("")
  year             Int?
  majorTasks       String             @default("")
  user             User?              @relation("Project_user", fields: [userId], references: [id])
  userId           String?            @map("user")
  images           Image[]            @relation("Project_images")
  thumbnail        Image?             @relation("Project_thumbnail", fields: [thumbnailId], references: [id])
  thumbnailId      String?            @map("thumbnail")
  banner           Image?             @relation("Project_banner", fields: [bannerId], references: [id])
  bannerId         String?            @map("banner")

  @@index([userId])
  @@index([thumbnailId])
  @@index([bannerId])
}

model ProjectChallenge {
  id          String   @id @default(cuid())
  name        String   @default("")
  description String   @default("")
  project     Project? @relation("ProjectChallenge_project", fields: [projectId], references: [id])
  projectId   String?  @map("project")

  @@index([projectId])
}

model Article {
  id          String  @id @default(cuid())
  name        String  @default("")
  url         String  @default("")
  date        String  @default("")
  user        User?   @relation("Article_user", fields: [userId], references: [id])
  userId      String? @map("user")
  thumbnail   Image?  @relation("Article_thumbnail", fields: [thumbnailId], references: [id])
  thumbnailId String? @map("thumbnail")

  @@index([userId])
  @@index([thumbnailId])
}

model Image {
  id                     String    @id @default(cuid())
  for                    String?
  fieldName              Json?
  from_Project_images    Project[] @relation("Project_images")
  from_Project_thumbnail Project[] @relation("Project_thumbnail")
  from_Project_banner    Project[] @relation("Project_banner")
  from_Article_thumbnail Article[] @relation("Article_thumbnail")
}